const { default: axios } = require('axios');

const baseURL = 'http://localhost:8765';
const deckName = 'deck:Norwegisch::SteinpStein';
const newDeck = 'Norwegisch::Stein på stein (Norsk -> Tysk)';
async function execute() {
  try {
    const cardIds = await fetchCardsFromDeck();
    const cardValues = await GetCardValues(cardIds);
    const switchedValues = switchFrontAndBack(cardValues);
    console.log('Cards total: ' + switchedValues.length);
    await createNewDeck();
    await addCardsToNewDeck(switchedValues);
  } catch (e) {
    console.log(e);
  }
}
execute();

/*
    HELPER
*/
//fetch cards from deck
//action: findCards
async function fetchCardsFromDeck() {
  const resp = await axios.post(`${baseURL}`, {
    action: 'findCards',
    version: 6,
    params: {
      query: deckName,
    },
  });
  return resp.data.result;
}

//get front and back value
//action: cardsInfo
async function GetCardValues(cardIds) {
  const resp = await axios.post(baseURL, {
    action: 'cardsInfo',
    version: 6,
    params: {
      cards: cardIds,
    },
  });
  return resp.data.result.map((cv) => {
    if (cv.fields.Vorderseite) {
      return {
        front: cv.fields.Vorderseite.value,
        back: cv.fields.Rückseite.value,
      };
    }
    return {
      front: cv.fields.Front.value,
      back: cv.fields.Back.value,
    };
  });
}

//switch front and back value
function switchFrontAndBack(cardValues) {
  return cardValues.map((cv) => {
    return { front: cv.back, back: cv.front };
  });
}

//create new deck
//action: createDeck
async function createNewDeck() {
  return await axios.post(baseURL, {
    action: 'createDeck',
    version: 6,
    params: {
      deck: newDeck,
    },
  });
}

//add switched cards to new deck
//action: guiAddCards
async function addCardsToNewDeck(switchedValues) {
  try {
    await axios.post(baseURL, {
      action: 'addNotes',
      version: 6,
      params: {
        notes: switchedValues.map((sw) => {
          return {
            deckName: newDeck,
            modelName: 'Basic',
            fields: {
              Front: sw.front,
              Back: sw.back,
            },
            tags: ['autoGenerated'],
          };
        }),
      },
    });
  } catch (e) {
    console.log(e);
  }
}
